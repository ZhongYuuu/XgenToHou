// ===========================================================================
// Copyright 2021 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================


global proc xgmSplineCacheImportSetOptionVars(int $reset)
{
    if ($reset || !`optionVar -exists xgmSplineCacheImportFitTimeRange`) {
        optionVar -intValue xgmSplineCacheImportFitTimeRange 0;
    }

    if ($reset || !`optionVar -exists xgmSplineCacheImportSetToStartFrame`) {
        optionVar -intValue xgmSplineCacheImportSetToStartFrame 0;
    }
}

global proc xgmSplineCacheImportOptionsSetup(string $parent, int $reset)
{
    //  Retrieve the option settings
    //
    xgmSplineCacheImportSetOptionVars($reset);

    setParent $parent;

    int $fitTimeRange = `optionVar -q xgmSplineCacheImportFitTimeRange`;
    checkBoxGrp   -e
        -value1 $fitTimeRange
        fitTimeRange;

    int $setToStartFrame = `optionVar -q xgmSplineCacheImportSetToStartFrame`;
    checkBoxGrp -e
        -value1 $setToStartFrame
        setCurrentTimeToStartFrame;
    
}

global proc xgmSplineCacheImportSaveOptionVars(string $parent)
{
    setParent $parent;

    optionVar -intValue xgmSplineCacheImportFitTimeRange 
         `checkBoxGrp -q -value1 fitTimeRange`;

    optionVar -intValue xgmSplineCacheImportSetToStartFrame 
         `checkBoxGrp -q -value1 setCurrentTimeToStartFrame`;
}

global proc string xgmSplineCacheImportOptionsUI(string $parent)
{
    //  The argument is used as the parent for the options UI
    //
    setParent $parent;

    //  Activate the default UI template so that the layout of this
    //  option box is consistent with the layout of the rest of the
    //  application.
    //
    setUITemplate -pushTemplate DefaultTemplate;

    //  Turn on the wait cursor.
    //
    waitCursor -state 1;

    // Create option box or file options contents.
    //
    string $optionLayout = `scrollLayout -childResizable 1`;
    columnLayout -adjustableColumn true;

        checkBoxGrp
            -numberOfCheckBoxes 1
            -label1 (uiRes("m_xgmSplineCacheImport.kFitTimeRange")) 
            fitTimeRange;

        checkBoxGrp
            -numberOfCheckBoxes 1
            -label1 (uiRes("m_xgmSplineCacheImport.kSetCurrentTimeToStartFrame")) 
            setCurrentTimeToStartFrame;

        setParent ..;
    setParent ..;

    //  Turn off the wait cursor.
    //
    waitCursor -state 0;

    // Deactivate the default UI template
    //
    setUITemplate -popTemplate;

    //  Set the current values of the option box.
    //
    eval ("xgmSplineCacheImportOptionsSetup " + $parent + " 0");

    return $optionLayout;
}

global proc xgmSplineCacheImportCmd()
{
    string $filter = (uiRes("m_xgmSplineCacheImport.kAlembic")) + " (*.abc);;"
                    + (uiRes("m_xgmSplineCacheImport.kAllFiles")) + " (*.*)";
    string $okCaption = (uiRes("m_xgmSplineCacheImport.kXgmSplineCacheImportDialogOK"));
    string $caption = (uiRes("m_xgmSplineCacheImport.kXgmSplineCacheImportDialog"));

    string $files[] = `fileDialog2 -fileMode 1
                    -fileFilter $filter
                    -okCaption $okCaption
                    -caption $caption
                    -optionsUICreate "xgmSplineCacheImportOptionsUI"
                    -optionsUICommit "xgmSplineCacheImportSaveOptionVars"`;
    if(size($files) == 0) 
        return;  
   
    int $fitTimeRange = `optionVar -q xgmSplineCacheImportFitTimeRange`;
    int $setToStartFrame = `optionVar -q xgmSplineCacheImportSetToStartFrame`;
   
    string $cmd = " -file " + "\"" +  $files[0] + "\"";
    if($fitTimeRange)
        $cmd += " -fitTimeRange ";
    if($setToStartFrame)
        $cmd += " -setToStartFrame ";

    eval ( "xgmSplineCache -import " + $cmd );
}

global proc xgmSplineCacheImportOptionsCmd()
{
    //  Name of the command for this option box.
    string $commandName = "xgmSplineCacheImport";

    //  STEP 1:  Get the option box.
    //  ============================
    //
    //  The value returned is the name of the layout to be used as
    //  the parent for the option box UI.
    //
    string $layout = getOptionBox();

    //  STEP 2:  Pass the command name to the option box.
    //  =================================================
    //
    //  Any default option box behaviour based on the command name is set
    //  up with this call. For example, updating the 'Help' menu item with
    //  the name of the command.
    //
    setOptionBoxCommandName($commandName);

    //  STEP 3:  Create option box contents.
    //  ====================================
    //
    string $parent = xgmSplineCacheImportOptionsUI($layout);

    //  STEP 4:  Customize the buttons.
    //  ===============================
    //
    //  Provide more descriptive labels for the buttons.
    //  Disable those buttons that are not applicable to the option box.
    //  Attach actions to those buttons that are applicable to the option box.

    string $saveOptionCmd = "xgmSplineCacheImportSaveOptionVars " + $parent + ";";
    string $importCmd = $saveOptionCmd + "xgmSplineCacheImportCmd;";

    $saveOptionCmd += " hideOptionBox;";

    // 'Import' button
    //
    string $importBtn = getOptionBoxApplyBtn();
    button -e -label (uiRes("m_xgmSplineCacheImport.kXgmImportSplineCache"))
           -command $importCmd
           $importBtn;

    // 'Save' button
    //
    string $saveBtn = getOptionBoxSaveBtn();
    button -e
           -command $saveOptionCmd
           $saveBtn;

    // 'Reset' button
    //
    string $resetBtn = getOptionBoxResetBtn();
    button -e
           -command ("xgmSplineCacheImportOptionsSetup " + $parent + " 1")
           $resetBtn;

    //  STEP 5:  Set the option box title.
    //  ==================================
    //
    setOptionBoxTitle((uiRes("m_xgmSplineCacheImport.kXgmImportCacheOptions")));

    //  STEP 6:  Customize the 'Help' menu item text.
    //  =============================================
    //
    setOptionBoxHelpTag($commandName);

    //  Show the option box.
    //  ====================
    //
    showOptionBox();
}
