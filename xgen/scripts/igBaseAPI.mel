// ===========================================================================
// Copyright 2021 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
// Copyright (C) 1997-2013 Autodesk, Inc., and/or its licensors.
// All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Autodesk, Inc. ("Autodesk") and/or its licensors,
// which is protected by U.S. and Canadian federal copyright law and by
// international treaties.
//
// The Data is provided for use exclusively by You. You have the right to use,
// modify, and incorporate this Data into other products for purposes authorized 
// by the Autodesk software license agreement, without fee.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND. AUTODESK
// DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED WARRANTIES
// INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF NON-INFRINGEMENT,
// MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR ARISING FROM A COURSE 
// OF DEALING, USAGE, OR TRADE PRACTICE. IN NO EVENT WILL AUTODESK AND/OR ITS
// LICENSORS BE LIABLE FOR ANY LOST REVENUES, DATA, OR PROFITS, OR SPECIAL,
// DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES, EVEN IF AUTODESK AND/OR ITS
// LICENSORS HAS BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.

/**
 * @file igBaseAPI.mel
 * @brief Basic API methods for iGroom.
 *
 * <b>CONFIDENTIAL INFORMATION: This software is the confidential and
 * proprietary information of Walt Disney Animation Studios ("WDAS").
 * This software may not be used, disclosed, reproduced or distributed
 * for any purpose without prior written authorization and license
 * from WDAS. Reproduction of any section of this software must include
 * this legend and all copyright notices.
 * Copyright Disney Enterprises, Inc. All rights reserved.</b>
 *
 * @author Thomas V Thompson II
 *
 * @version tthompso  05/14/07  Initial Version
 */


/**
 * Get the currently active description. 
   Note: If current is not active, it takes the first off from the scene. 
 */
global proc string igCurrentDescription()
{
    global string $gIgCurrentDescription;
    if (( $gIgCurrentDescription == "" ) ||
        (!`objExists $gIgCurrentDescription` )) {
        string $descs[] = igAllDescriptions();
        igSetCurrentDescription( $descs[0] );
    }
    return $gIgCurrentDescription;
}


/**
 * Get the currently active description. Might return an empty string if there 
   is no active description.
 */
global proc string igActiveDescription()
{
    global string $gIgCurrentDescription;
    return $gIgCurrentDescription;
}

/**
 * Set which description should be considered active.
 */
global proc igSetCurrentDescription( string $desc )
{
    global string $gIgNullDescriptionTag;
    global string $gIgCurrentDescription;
    if ( $desc != $gIgNullDescriptionTag ) {
        $gIgCurrentDescription = $desc;
    } else {
        $gIgCurrentDescription = "";
    }
}


/**
 * Get the list of geometry to which the description is bound.
 */
global proc string[] igGeometry( string $desc )
{
    global string $gIgNullDescriptionTag;
    string $result[];
    if (( $desc=="" ) || ( $desc == $gIgNullDescriptionTag )) return $result;
    
    string $children[];
    $children  = `listRelatives -c -shapes $desc`;
    string $geomString = `getAttr ($children[0]+".geom")`;
    $result = stringToStringArray( $geomString, " " );
    return $result;
}


/**
 * Return all iGroom descriptions in the scene.
 */
global proc string [] igAllDescriptions()
{
    global string $gIgNullDescriptionTag;
    string $shapes[] = `ls -type igmDescription`;
    string $xforms[];

    int $i = 0;
    for ( $shape in $shapes ) {
        $tmp = `listRelatives -pa -p $shape`;
        $xforms[$i++] = $tmp[0];
    }

    if ( size($xforms) == 0 ) {
        $xforms[0] = $gIgNullDescriptionTag;
    }
    
    return $xforms;
}


/**
 * Callback for changing the brush via shelf buttons.
 */
global proc igChangeBrush(string $brush)
{
    global string $gIgActiveBrush;
    global string $gIgNewActiveBrush;
    
    if (`window -exists iGroomWindow`) {
        $gIgNewActiveBrush = $brush;
        igRefreshBrushUI;
    } else {
        $gIgActiveBrush = $brush;
        eval ( "ig" + $gIgActiveBrush + "BrushInit" );
    }
    igBrushContextSelect;
}


/**
 * Enforce the path name always ends with "/".
 * 
 * @param pathName  the path to check
 */
global proc string igValidPath( string $pathName )
{
    // Strip off the white spaces.
    string $result = strip( $pathName );
    
    // Append "/".
    if ( $result != "" &&  !`endsWith $result "/"` ) 
        $result += "/";

    return $result;
}


/**
 * Get the output directory for the given description. This will be the
 * first directory in its path.
 *
 * @param description  the description to query
 */
global proc string igOutputDir( string $description )
{
    string $igpath = `getAttr ($description+".path")`;
    string $paths[] = stringToStringArray( $igpath, ":" );
    string $igdir = strip($paths[0]);
    $igdir = igValidPath( $igdir );

    return $igdir;    
}
