// ===========================================================================
// Copyright 2021 Autodesk, Inc. All rights reserved.
//
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
// Copyright 2014 Autodesk, Inc. All rights reserved. 
//
// Use of this software is subject to the terms of the Autodesk 
// license agreement provided at the time of installation or download, 
// or which otherwise accompanies this software in either electronic 
// or hard copy form.


//	Description:	initializes guideSculptContext tool property sheet values
//
//	Input Arguments:
//		toolName  - this is the name of the instance of the tool
//					that the property sheet is modifying.
//
//	Return Value:
//		None.
//


global proc xgmGuideSculptValues(string $toolName) 
{
	string $parent = `toolPropertyWindow -q -location`;
	setParent $parent;
    
    frameLayout -e -en true -cl false xgmGuideSculptBrushFrame;
	xgmGuideSculptOptionValues($toolName);

	string $help = "GuideSculptTool";
	toolPropertySetCommon $toolName "xgGuideSculptTool.xpm" $help;

	toolPropertySelect "xgmGuideSculpt";
}


global proc xgmGuideSculptOptionValues(string $toolName)
{
	int $set;

	// lock length
	//
	$set = eval("xgmGuideSculptContext -q -lockLength " + $toolName);
	if ($set) {
		checkBoxGrp -e -value1 1 lockLengthGrp;
	}
	else {
		checkBoxGrp -e -value1 0 lockLengthGrp;
	}

    // affects
    $set = eval("xgmGuideSculptContext -q -affect " + $toolName);
	radioButtonGrp -e -select $set affectsRbg;

    // brush size
	//
	$set = eval("xgmGuideSculptContext -q -size " + $toolName);
	floatSliderGrp -e -value $set sculptGuidesBrushSizeFsg;

	// volumetric selection
	//
	$set = eval("xgmGuideSculptContext -q -volumetricSel " + $toolName);
	if ($set) {
		checkBoxGrp -e -value1 1 volumetricSelGrp;
	}
	else {
		checkBoxGrp -e -value1 0 volumetricSelGrp;
	}
    
    // selection hilight
    //
    $set = eval("xgmGuideSculptContext -q -selHilight " + $toolName);
    xgenGuideSculptSelHilightChanged($set);
    
    float $r = eval("xgmGuideSculptContext -q -selVolumeColorR " + $toolName);
    float $g = eval("xgmGuideSculptContext -q -selVolumeColorG " + $toolName);
    float $b = eval("xgmGuideSculptContext -q -selVolumeColorB " + $toolName);
    colorSliderGrp -e -rgbValue $r $g $b selectedVolumeColorSlider;
    
    $r = eval("xgmGuideSculptContext -q -selGuideColorR " + $toolName);
    $g = eval("xgmGuideSculptContext -q -selGuideColorG " + $toolName);
    $b = eval("xgmGuideSculptContext -q -selGuideColorB " + $toolName);
    colorSliderGrp -e -rgbValue $r $g $b selectedGuideColorSlider;
}

global proc xgenGuideSculptSelHilightChanged(int $status)
{
    checkBoxGrp -e -value1 $status selHilightGrp;
    colorSliderGrp -e -enable $status selectedVolumeColorSlider;
    colorSliderGrp -e -enable $status selectedGuideColorSlider;
}

